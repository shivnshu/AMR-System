=============================
Version 0.17.2 - January 2017

This release requires oce-0.17.0 or oce-0.17.1 or oce-0.17.2. Prefer the latter.

* webgl: upgrade three.js to r83; use https for three.js library

* webgl: X3D quality improvements; use https; replaced IndexedFaceSet with TriangleSet

* examples: added point cloud and glsl examples

* gui: osx qtDisplay supports Retina displays

* gui: fixed a regression in qtDisplay

* gui: fixed PySide support

* ci/cd: travis upoads nightly builds to http://anaconda.com/tpaviot, conda packages
on appveyor are available for download as artifacts

=============================
Version 0.17.1 - December 2016

This release requires oce-0.17.0 or oce-0.17.1 or oce-0.17.2. Prefer the latter.

* gui: fix of the resizing issue of the qtViewer widget

* wrapper: Add class local properties #356

* wrapper: Fixed string representation #353

* wrapper: Fix incorrect array size #355

* wrapper: BRep 3d font support and related example

* webgl: major refactoring of threejs and webgl renderers
 (webserver, contour edge rendering, multishape, mesh quality, colr and transparency)

* wrapper: proper __repr__ function for pythonocc objects

* gui: PyQt signals and related example

* gui: cursor pan, zoom, rotate in the Qt viewer #335

* wrapper: fixes for BOPCol and BOPAlgo packages

* examples: ported algotopia examples, bisector, geomplate

* minor fixes

=============================
Version 0.17 - Septembre 2016

This release requires oce-0.17.0 or oce-0.17.1 or oce-0.17.2. Prefer the latter.

* port to oce-0.17.x

* memory management fixes

* New examples: AIS_ColoredShape, 2d_fillet, inertia properties, edge_color, 

=========================
Version 0.16.5 - May 2016

This release requires oce-0.16.0 or oce-0.16.1

* Exception handling fix

* pyqt 4 and 5 fixes

* OCCViewer fixes (py3k, DisplayVector)

* New examples : minimal distance, boolean operations,
fillet operations, splinecage, topology_traverse

* New modules made available from TKCAF, TKSTEP and TKSTEPBase

===========================
Version 0.16.4 - April 2016

This release requires oce-0.16.0 or oce-0.16.1

* New memeory management system : previous pythonocc released
suffered from memory issues (leaks). The release introduces a
much better way to deal with the OCE handles

* wx and pyqt5 fixes

* minor fixes to the webgl renderers

=============================
Version 0.16.3 - January 2016

This release requires oce-0.16.0 or oce-0.16.1

* New examples: visualization_overpaint_viewerer,
visualization_graphic3d_custom_opengl.py, matplotlib_box,
parallel_slicer, topology_glue

* PyQt5 support

* Improvements and fixes to the Tesselator class:
Computation of edges, Interface to Vertices, Normals, and Triangles

* minor portability fixes/improvements.

==========================
Version 0.16.2 - July 2015

This release requires oce-0.16.0 or oce-0.16.1

* New examples : display_quality, surface_from_curve, export_to_image,
shape_pickling, display_linewidth, prs3d_customization, textured_shape,
faircurve, topology_prism, topology_pipe, evolved_shape, draft_angle,
through_section, topology_face, topology_edge, vertex_filleting,
export_to_EF(PDF, PS, tex, SVG)

* Mingw64 compilation fix

* Fixed wrapper for Standard_Boolean returned by reference as parameters

==========================
Version 0.16.1 - June 2015

This release requires oce-0.16.0 or oce-0.16.1

* WebGL upgrades and improvements, for both Three.js and x3dom, new webgl examples

* used deque in garbage collector rather than python lists

* pyside fix on Windows

* qt viewer improvements

* added classic bottle example

* wrapper fix for C++ const Standard_Integer & parameters

* wrapper fix for default values ;

* minor cmake fixes/improvements

* new wrapper for : MeshVS, OCAF STEP and IGES 

==============================
Version 0.16.0 - November 2014

This release requires oce-0.16.0

* Support for latest oce release (0.16.0)

* major code refactoring, including examples

* completed WebGl three.js work

* added x3dom renderer and x3d export feature

* improved project quality (travis-ci, pylint check, pep8 compliancy,
  removed old and/or untested code)

* sphinx based documentation, both for api documentation and getting started

* python3 support
